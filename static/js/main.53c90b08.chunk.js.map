{"version":3,"sources":["components/Logo/brain.png","components/Navigation/Navigation.js","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","components/Signin/Signin.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","_ref","onRouteChange","isSignedIn","react_default","a","createElement","style","display","justifyContent","onClick","className","Logo","tilt_default","options","max","height","width","src","brain","alt","Rank","name","entries","concat","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","FaceRecognition","imageUrl","boxes","id","map","box","key","topRow","top","right","rightCol","bottom","bottomRow","left","leftCol","Signin","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","process","method","headers","Content-Type","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","htmlFor","Component","Register","onNameChange","onSubmitRegister","res","particleOptions","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","calculateFaceLocations","outputs","regions","face","clarifaiFace","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBoxes","count","assign","catch","console","log","err","_this$state","particles_default","params","components_Navigation_Navigation","components_Logo_Logo","components_Rank_Rank","components_ImageLinkForm_ImageLinkForm","components_FaceRecognition_FaceRecognition","components_Signin_Signin","components_Register_Register","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.53c90b08.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.69db22d6.png\";","import React from \"react\";\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n  if (isSignedIn) {\r\n    return (\r\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n        <p\r\n          onClick={() => onRouteChange(\"signin\")}\r\n          className=\"f3 link dim white pa1 mr4 pointer\"\r\n        >\r\n          Sign Out\r\n        </p>\r\n      </nav>\r\n    );\r\n  } else {\r\n    return (\r\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n        <p\r\n          onClick={() => onRouteChange(\"signin\")}\r\n          className=\"f3 link dim white pa1 mr4 pointer\"\r\n        >\r\n          Sign in\r\n        </p>\r\n        <p\r\n          onClick={() => onRouteChange(\"register\")}\r\n          className=\"f3 link dim white pa1 mr4 pointer\"\r\n        >\r\n          Register\r\n        </p>\r\n      </nav>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport Tilt from \"react-tilt\";\r\nimport \"./Logo.css\";\r\nimport brain from \"./brain.png\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"ma4 mt0\">\r\n      <Tilt\r\n        className=\"Tilt br2 shadow-1\"\r\n        options={{ max: 40 }}\r\n        style={{ height: 150, width: 150 }}\r\n      >\r\n        <div className=\"Tilt-inner\">\r\n          <img src={brain} alt=\"brain\" />\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\n\r\nconst Rank = ({ name, entries }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"white f3\">\r\n        {`${name}, your current score is`}{\" \"}\r\n        <span className=\"white f1\">{entries}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rank;\r\n","import React from \"react\";\r\nimport \"./ImageLinkForm.css\";\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"tc f3 white\">\r\n        {\"This app will detect faces in your pictures. Give it a try!\"}\r\n      </p>\r\n      <div className=\"center\">\r\n        <div className=\"pa3 center br3 shadow-5 form\">\r\n          <input\r\n            className=\"f4 pa2 w-70 center\"\r\n            type=\"text\"\r\n            onChange={onInputChange}\r\n          />\r\n          <button\r\n            className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-blue\"\r\n            onClick={onButtonSubmit}\r\n          >\r\n            Detect\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageLinkForm;\r\n","import React from \"react\";\r\nimport \"./FaceRecognition.css\";\r\n\r\nconst FaceRecognition = ({ imageUrl, boxes }) => {\r\n  return (\r\n    <div className=\"center ma\">\r\n      <div className=\"absolute mt2\">\r\n        <img\r\n          id=\"inputimage\"\r\n          src={imageUrl}\r\n          alt=\"\"\r\n          width=\"500px\"\r\n          height=\"auto\"\r\n        />\r\n        {boxes.map(box => {\r\n          return (\r\n            <div\r\n              key={box.topRow}\r\n              className=\"bounding-box\"\r\n              style={{\r\n                top: box.topRow,\r\n                right: box.rightCol,\r\n                bottom: box.bottomRow,\r\n                left: box.leftCol\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FaceRecognition;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Signin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: \"\",\r\n      signInPassword: \"\"\r\n    };\r\n  }\r\n\r\n  onEmailChange = event => {\r\n    this.setState({ signInEmail: event.target.value });\r\n  };\r\n\r\n  onPasswordChange = event => {\r\n    this.setState({ signInPassword: event.target.value });\r\n  };\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch(`${process.env.REACT_APP_API}/signin`, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange(\"home\");\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <article className=\"br3 ba dark-gray b--black-10 mv6 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 white-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  onChange={this.onEmailChange}\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  onChange={this.onPasswordChange}\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"mv3\">\r\n              <input\r\n                onClick={this.onSubmitSignIn}\r\n                className=\"b ph3 pv2 input-reset ba b--white white bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Sign in\"\r\n              />\r\n            </div>\r\n            <div className=\"lh-copy mt3\">\r\n              <p\r\n                onClick={() => onRouteChange(\"register\")}\r\n                className=\"f6 link dim white db pointer\"\r\n              >\r\n                Register\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\nexport default Signin;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      name: \"\"\r\n    };\r\n  }\r\n\r\n  onEmailChange = event => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  onNameChange = event => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n\r\n  onPasswordChange = event => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  onSubmitRegister = () => {\r\n    fetch(`${process.env.REACT_APP_API}/register`, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        name: this.state.name\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange(\"home\");\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <article className=\"br3 ba dark-gray b--black-10 mv6 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 white-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f2 fw6 ph0 mh0\"> Register </legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\r\n                  Name\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  onChange={this.onNameChange}\r\n                  id=\"name\"\r\n                />\r\n              </div>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                  id=\"email-address\"\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                  id=\"password\"\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"lh-copy mt3\">\r\n              <input\r\n                onClick={this.onSubmitRegister}\r\n                className=\"b ph3 pv2 input-reset ba b--white white bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Register\"\r\n              />\r\n            </div>\r\n            <div className=\"mv3\">\r\n              <p\r\n                onClick={() => onRouteChange(\"signin\")}\r\n                className=\"f5 link dim white db pointer\"\r\n              >\r\n                Sign in\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\nexport default Register;\r\n","import React, { Component } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport Rank from \"./components/Rank/Rank\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Particles from \"react-particles-js\";\nimport Signin from \"./components/Signin/Signin\";\nimport Register from \"./components/Register/Register\";\nimport \"./App.css\";\n\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 41,\n      density: {\n        enable: true,\n        value_area: 700\n      }\n    }\n  }\n};\n\nconst initialState = {\n  input: \"\",\n  imageUrl: \"\",\n  boxes: [],\n  route: \"signin\",\n  isSignedIn: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\"\n  }\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = data => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    });\n  };\n\n  onInputChange = event => {\n    this.setState({ input: event.target.value });\n  };\n\n  calculateFaceLocations = data => {\n    return data.outputs[0].data.regions.map(face => {\n      const clarifaiFace = face.region_info.bounding_box;\n      const image = document.getElementById(\"inputimage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    });\n  };\n\n  displayFaceBoxes = boxes => {\n    this.setState({ boxes });\n  };\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    fetch(`${process.env.REACT_APP_API}/imageurl`, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch(`${process.env.REACT_APP_API}/image`, {\n            method: \"put\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count }));\n            })\n            .catch(console.log);\n        }\n        this.displayFaceBoxes(this.calculateFaceLocations(response));\n      })\n      .catch(err => console.log(err));\n  };\n\n  onRouteChange = route => {\n    if (route === \"signin\") {\n      this.setState(initialState);\n    } else if (route === \"home\") {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route });\n  };\n\n  render() {\n    const { user, isSignedIn, imageUrl, boxes, route } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particleOptions} />\n        <Navigation\n          onRouteChange={this.onRouteChange}\n          isSignedIn={isSignedIn}\n        />\n        {route === \"home\" ? (\n          <div>\n            <div className=\"container\">\n              <Logo />\n            </div>\n            <Rank name={user.name} entries={user.entries} />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n            />\n            <FaceRecognition boxes={boxes} imageUrl={imageUrl} />\n          </div>\n        ) : route === \"signin\" ? (\n          <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        ) : (\n          <Register\n            loadUser={this.loadUser}\n            onRouteChange={this.onRouteChange}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"tachyons\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}